#!/bin/bash

nodeinfo=$(scontrol show node)
name_regex="NodeName=([a-z]+\-?[0-9]+?)"
cpu_alloc_regex="CPUAlloc=([0-9]+)"
cpu_total_regex="CPUTot=([0-9]+)"
mem_alloc_regex="AllocMem=([0-9]+)"
mem_total_regex="RealMemory=([0-9]+)"

sum_cpu_avail="0"
sum_cpu_total="0"
sum_mem_avail="0"
sum_mem_total="0"

echo -e "┌──────────────────────────────────────────────────────────┐"
echo -e "│ Node\t\t\tCPUs(Free)\t\tRAM(Free)  │"
echo -e "├──────────────────────────────────────────────────────────┤"
for node in $nodeinfo; do
	if [[ $node =~ $name_regex ]]; then
		name=${BASH_REMATCH[1]}
	fi
	if [[ $node =~ $cpu_alloc_regex ]]; then
		cpu_alloc=${BASH_REMATCH[1]}
	fi
	if [[ $node =~ $cpu_total_regex ]]; then
		cpu_total=${BASH_REMATCH[1]}
	fi
	if [[ $node =~ $mem_alloc_regex ]]; then
		mem_alloc=${BASH_REMATCH[1]}
		((cpu_avail = cpu_total - cpu_alloc))
		((mem_avail = mem_total - mem_alloc))
		#Only if non-zero free
		if [[ $1 == "-a" || $cpu_avail -gt "0" ]]; then
			((sum_cpu_avail = sum_cpu_avail + cpu_avail))
			((sum_cpu_total = sum_cpu_total + cpu_total))
			((sum_mem_avail = sum_mem_avail + mem_avail))
			((sum_mem_total = sum_mem_total + mem_total))
			printf "│%18s\t%3d of %3d\t%7d of %7d │\n" $name $cpu_avail $cpu_total $mem_avail $mem_total
		fi
	fi
	if [[ $node =~ $mem_total_regex ]]; then
		mem_total=${BASH_REMATCH[1]}
	fi
done
echo "├──────────────────────────────────────────────────────────┤"
printf "│ %18s\t%3d of %3d\t%7d of %7d │\n" "Total Free:" $sum_cpu_avail $sum_cpu_total $sum_mem_avail $sum_mem_total
echo "└──────────────────────────────────────────────────────────┘"
